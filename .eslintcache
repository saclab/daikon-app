[{"/Users/sidx/workspace/react/tpt-app/src/index.js":"1","/Users/sidx/workspace/react/tpt-app/src/reportWebVitals.js":"2","/Users/sidx/workspace/react/tpt-app/src/app/layout/App.js":"3","/Users/sidx/workspace/react/tpt-app/src/app/layout/TitleBar/TitleBar.js":"4","/Users/sidx/workspace/react/tpt-app/src/app/layout/MenuBar/MenuBar.js":"5","/Users/sidx/workspace/react/tpt-app/src/app/layout/Footer/Footer.js":"6","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomeSearch/GenomeSearch.js":"7","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomeView/GenomeView.js":"8","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomeView/GenomeViewMycobrowswer/GenomeViewMycobrowswer.js":"9","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomeView/GenomeViewNonPublicData/GenomeViewNonPublicData.js":"10","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomeView/GenomeViewBackgroundInformation/GenomeViewBackgroundInformation.js":"11","/Users/sidx/workspace/react/tpt-app/src/app/common/KeyValList/KeyValList.js":"12","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromote.js":"13","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromoteFormTarget/GenomePromoteFormTarget.js":"14","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromoteFormImpactOfChemInhibit/GenomePromoteFormImpactOfChemInhibit.js":"15","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromoteFormChemicalInhibition/GenomePromoteFormChemicalInhibition.js":"16","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromoteFormImpactOfGeneticInhibit/GenomePromoteFormImpactOfGeneticInhibit.js":"17","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromoteFormLiabilities/GenomePromoteFormLiabilities.js":"18","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromoteFormTractability/GenomePromoteFormTractability.js":"19","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromoteFormInteractions/GenomePromoteFormInteractions.js":"20","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromoteBucketScore/GenomePromoteBucketScore.js":"21","/Users/sidx/workspace/react/tpt-app/src/app/layout/Loading/Loading.js":"22","/Users/sidx/workspace/react/tpt-app/src/app/stores/genomeStore.js":"23","/Users/sidx/workspace/react/tpt-app/src/app/api/agent.js":"24","/Users/sidx/workspace/react/tpt-app/src/scenes/Home/Home.js":"25","/Users/sidx/workspace/react/tpt-app/src/scenes/Landing/Landing.js":"26","/Users/sidx/workspace/react/tpt-app/src/app/layout/NotFound/NotFound.js":"27","/Users/sidx/workspace/react/tpt-app/src/history.js":"28"},{"size":639,"mtime":1612910216619,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1611180810196,"results":"31","hashOfConfig":"30"},{"size":1831,"mtime":1612910274657,"results":"32","hashOfConfig":"30"},{"size":1269,"mtime":1612566197316,"results":"33","hashOfConfig":"30"},{"size":1169,"mtime":1612565056812,"results":"34","hashOfConfig":"30"},{"size":534,"mtime":1612550405067,"results":"35","hashOfConfig":"30"},{"size":4712,"mtime":1612559741434,"results":"36","hashOfConfig":"30"},{"size":3668,"mtime":1612817717401,"results":"37","hashOfConfig":"30"},{"size":4643,"mtime":1612904698160,"results":"38","hashOfConfig":"30"},{"size":1830,"mtime":1611870863350,"results":"39","hashOfConfig":"30"},{"size":2010,"mtime":1611869425792,"results":"40","hashOfConfig":"30"},{"size":439,"mtime":1611762549198,"results":"41","hashOfConfig":"30"},{"size":4405,"mtime":1612375640128,"results":"42","hashOfConfig":"30"},{"size":4430,"mtime":1611867421195,"results":"43","hashOfConfig":"30"},{"size":11582,"mtime":1611867442114,"results":"44","hashOfConfig":"30"},{"size":7654,"mtime":1611867452518,"results":"45","hashOfConfig":"30"},{"size":10307,"mtime":1611867464097,"results":"46","hashOfConfig":"30"},{"size":5037,"mtime":1611867480398,"results":"47","hashOfConfig":"30"},{"size":10233,"mtime":1611867492918,"results":"48","hashOfConfig":"30"},{"size":8506,"mtime":1611944084195,"results":"49","hashOfConfig":"30"},{"size":852,"mtime":1611945721163,"results":"50","hashOfConfig":"30"},{"size":486,"mtime":1612378547904,"results":"51","hashOfConfig":"30"},{"size":1395,"mtime":1612908128454,"results":"52","hashOfConfig":"30"},{"size":1512,"mtime":1612910688586,"results":"53","hashOfConfig":"30"},{"size":5749,"mtime":1612558611975,"results":"54","hashOfConfig":"30"},{"size":197,"mtime":1612565958694,"results":"55","hashOfConfig":"30"},{"size":243,"mtime":1612815748358,"results":"56","hashOfConfig":"30"},{"size":87,"mtime":1612904570882,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"toh2k0",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/sidx/workspace/react/tpt-app/src/index.js",[],"/Users/sidx/workspace/react/tpt-app/src/reportWebVitals.js",[],["123","124"],"/Users/sidx/workspace/react/tpt-app/src/app/layout/App.js",[],"/Users/sidx/workspace/react/tpt-app/src/app/layout/TitleBar/TitleBar.js",["125","126"],"import React from \"react\";\nimport { Link, NavLink, withRouter } from \"react-router-dom\";\nimport cssClass from \"./TitleBar.module.css\";\nimport { Button } from \"primereact/button\";\nimport history from \"../../../history\";\n\nconst TitleBar = () => {\n  return (\n    <div className={cssClass.Header}>\n      <div className={[\"p-d-flex\"].join(\" \")}>\n        <Button\n          type=\"Button\"\n          icon=\"pi pi-th-large\"\n          className={[\"p-mr-2\", cssClass.BlackButton].join(\" \")}\n        />\n\n        <Button\n          onClick={() => history.push(\"/home\")}\n          className={[cssClass.LogoText, cssClass.BlackButton, \"p-mr-2\"].join(\n            \" \"\n          )}\n        >\n          \n          Target and Project Tracker (TPT)\n        </Button>\n\n        <Button\n          type=\"Button\"\n          icon=\"pi pi-search\"\n          className={[cssClass.Push, \"p-mr-2\", cssClass.BlackButton].join(\" \")}\n        />\n        <Button\n          type=\"Button\"\n          icon=\"pi pi-sliders-v\"\n          className={[\"p-mr-2\", cssClass.BlackButton].join(\" \")}\n        />\n        <Button\n          type=\"Button\"\n          className={[\"p-mr-2\", cssClass.BlackButton].join(\" \")}\n          icon=\"pi pi-user\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(TitleBar);\n","/Users/sidx/workspace/react/tpt-app/src/app/layout/MenuBar/MenuBar.js",[],"/Users/sidx/workspace/react/tpt-app/src/app/layout/Footer/Footer.js",[],"/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomeSearch/GenomeSearch.js",[],"/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomeView/GenomeView.js",[],"/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomeView/GenomeViewMycobrowswer/GenomeViewMycobrowswer.js",["127"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Fieldset } from \"primereact/fieldset\";\n\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport KeyValList from \"../../../../app/common/KeyValList/KeyValList\";\nimport GenomeStore from \"../../../../app/stores/genomeStore\";\n\n\nconst GenomeViewMycobrowswer = ({id}) => {\n  const [genomeData, setGenomeData] = useState({\n    \"GeneralAnnotation\": {\n      \"Type\": \"CDS\",\n      \"Function\": \"Facilitates transcription termination by a mechanism that involves rho binding to the nascent RNA, activation of rho'S RNA-dependent ATPase activity, and release of the mRNA from the DNA template\",\n      \"Product\": \"Probable transcription termination factor Rho homolog\",\n      \"Comments\": \"Rv1297, (MTCY373.17), len: 602 aa. Probable rho, transcription termination factor homolog, highly similar to many e.g. RHO_MYCLE|P45835 Mycobacterium leprae (610 aa), FASTA scores: (81.5% identity in 612 aa overlap). Contains 1 RNA recognition motif (RRM). Nucleotide position 1453608 in the genome sequence has been corrected, T:C resulting in G135G.\",\n      \"FunctionalCategory\": \"Information pathways\",\n      \"Proteomics\": \"Identified by proteomics (see Rosenkrands et al., 2000). Identified in the membrane fraction of M. tuberculosis H37Rv using 1D-SDS-PAGE and uLC-MS/MS (See Gu et al., 2003). Identified in the cell wall and cell membrane fractions of M. tuberculosis H37Rv using 2DLC/MS (See Mawuenyega et al., 2005). Identified by mass spectrometry in Triton X-114 extracts of M. tuberculosis H37Rv (See Malen et al., 2010). Identified by mass spectrometry in the membrane protein fraction and whole cell lysates of M. tuberculosis H37Rv but not the culture filtrate (See de Souza et al., 2011).\",\n      \"Transcriptomics\": \"mRNA identified by microarray analysis and down-regulated after 96h of starvation (see Betts et al., 2002).\",\n      \"Mutant\": \"Essential gene for in vitro growth of H37Rv, by analysis of saturated Himar1 transposon libraries (see DeJesus et al. 2017). Essential gene by Himar1 transposon mutagenesis in H37Rv strain (see Sassetti et al., 2003). Essential gene for in vitro growth of H37Rv, by Himar1 transposon mutagenesis (See Griffin et al., 2011).\"\n    },\n    \"Coordinates\": {\n      \"Type\": \"CDS\",\n      \"Start\": \"1453204\",\n      \"End\": \"1455012\",\n      \"Orientation\": \"+\"\n    },\n    \"GeneSummary\": {\n      \"GeneName\": \"rho\",\n      \"GeneLength\": \"1809 bp\",\n      \"Identifier\": \"Rv1297\",\n      \"Location\": \"1453204 bp\"\n    },\n    \"ProteinSummary\": {\n      \"MolecularMass\": \"65101.4 Da\",\n      \"IsoelectricPoint\": \"5.4216\",\n      \"ProteinLength\": \"602 amino acids\"\n    },\n    \"Orthologues\": {\n      \"Mbovis\": \"Mb1329\",\n      \"Mleprae\": \"ML1132\",\n      \"Mmarinum\": \"MMAR_4100\",\n      \"Msmegmatis\": \"MSMEG_4954\"\n    }\n  });\n\n   /* MobX Genome Store */\n   // eslint-disable-next-line no-undef\n   const genomeStore = useContext(GenomeStore);\n\n   /* Local State Management */\n \n   useEffect(() => {\n    //setGenomeData(genomeStore.getGenome(id));\n    genomeStore.getGenome(id);\n    \n   }, [genomeStore]); // eslint-disable-line react-hooks/exhaustive-deps\n\n\n  if (genomeData === null) {\n    return <ProgressSpinner />;\n  }\n\n\n  // axios.get(\"data/genomes.json\").then((res) => res.data.data)\n  return (\n    <div>\n      <div className=\"p-d-flex\">\n        <div className=\"p-mr-2\">\n          <div className=\"p-d-flex p-flex-column\">\n            <div className=\"p-mb-2\">\n              <Fieldset legend=\"General annotation\">\n                <KeyValList data={genomeData.GeneralAnnotation} />\n              </Fieldset>\n            </div>\n            <div className=\"p-mb-2\">\n              <Fieldset legend=\"Coordinates\">\n                <KeyValList data={genomeData.Coordinates} />\n              </Fieldset>\n            </div>\n          </div>\n        </div>\n        <div className=\"p-mr-2\">\n          <div className=\"p-d-flex p-flex-column\">\n            <div className=\"p-mb-2\">\n              <Fieldset legend=\"Gene summary\">\n                <KeyValList data={genomeData.GeneSummary} />\n              </Fieldset>\n            </div>\n            <div className=\"p-mb-2\">\n              {\" \"}\n              <Fieldset legend=\"Protein summary\">\n                <KeyValList data={genomeData.ProteinSummary} />\n              </Fieldset>\n            </div>\n            <div className=\"p-mb-2\">\n              {\" \"}\n              <Fieldset legend=\"Orthologues\">\n                <KeyValList data={genomeData.Orthologues} />\n              </Fieldset>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GenomeViewMycobrowswer;\n","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomeView/GenomeViewNonPublicData/GenomeViewNonPublicData.js",[],"/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomeView/GenomeViewBackgroundInformation/GenomeViewBackgroundInformation.js",[],"/Users/sidx/workspace/react/tpt-app/src/app/common/KeyValList/KeyValList.js",[],"/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromote.js",[],"/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromoteFormTarget/GenomePromoteFormTarget.js",[],"/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromoteFormImpactOfChemInhibit/GenomePromoteFormImpactOfChemInhibit.js",[],"/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromoteFormChemicalInhibition/GenomePromoteFormChemicalInhibition.js",["128"],"import React, { useState } from \"react\";\nimport { SplitButton } from \"primereact/splitbutton\";\nimport { Dropdown } from \"primereact/dropdown\";\n\nconst GenomePromoteFormChemicalInhibition = (props) => {\n  const [formValue, setFormValue] = useState({\n    mutationInTargetCausesResistance: \"\",\n    overexpressionOfTargetIncreaseMIC: \"\",\n    underexpressionOfTargetIncreaseMIC: \"\",\n    impactOnPathway: \"\",\n    compoundBindsPurifedTarget: \"\",\n    compoundInhibitsPurifedTarget: \"\",\n    supportingInformation: \"\",\n    modifedOn: \"\",\n    modifedBy: \"\",\n  });\n\n  const setForm = (e) => {\n    var newFormValue = { ...formValue };\n    newFormValue[e.target.name] = e.target.value;\n    setFormValue(newFormValue);\n    console.log(e);\n  };\n\n  const nextButtonItems = [\n    {\n      label: \"Save form data in browser\",\n      icon: \"pi pi-cloud-download\",\n      command: () => {\n        console.log(\"Save form data local\");\n      },\n    },\n    {\n      label: \"Reset\",\n      icon: \"pi pi-refresh\",\n      command: () => {\n        console.log(\"Reset Section\");\n      },\n    },\n  ];\n\n  const selectItemsYN = [\n    { label: \"Yes\", value: \"yes\" },\n    { label: \"No\", value: \"no\" },\n    { label: \"Unknown\", value: \"un\" },\n  ];\n\n  const selectItemsAI = [\n    { label: \"Active\", value: \"active\" },\n    { label: \"Inactive\", value: \"inactive\" },\n    { label: \"Unknown\", value: \"un\" },\n  ];\n\n  return (\n    <React.Fragment>\n      <div className=\"card\">\n        <h5>a) in live Mtb</h5>\n        <div className=\"p-fluid\">\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"mutationInTargetCausesResistance\"\n              className=\"p-col-12 p-md-2\"\n            >\n              Mutation in target causes resistance?\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"mutationInTargetCausesResistance\"\n                options={selectItemsYN}\n                value={formValue.mutationInTargetCausesResistance}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"overexpressionOfTargetIncreaseMIC\"\n              className=\"p-col-12 p-md-2\"\n            >\n              Overexpression of target increase MIC?\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"overexpressionOfTargetIncreaseMIC\"\n                options={selectItemsYN}\n                value={formValue.overexpressionOfTargetIncreaseMIC}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"underexpressionOfTargetIncreaseMIC\"\n              className=\"p-col-12 p-md-2\"\n            >\n              Underexpression of target increase MIC?\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"underexpressionOfTargetIncreaseMIC\"\n                options={selectItemsYN}\n                value={formValue.underexpressionOfTargetIncreaseMIC}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"impactOnPathway\" className=\"p-col-12 p-md-2\">\n              Impact on pathway :\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"impactOnPathway\"\n                options={selectItemsYN}\n                value={formValue.impactOnPathway}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <br />\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <h5>b) in vitro</h5>\n        <div className=\"p-fluid\">\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"compoundBindsPurifedTarget\"\n              className=\"p-col-12 p-md-2\"\n            >\n              Compound binds purifed target\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"compoundBindsPurifedTarget\"\n                options={selectItemsYN}\n                value={formValue.compoundBindsPurifedTarget}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"compoundInhibitsPurifedTarget\"\n              className=\"p-col-12 p-md-2\"\n            >\n              Compound inhibits purifed target\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"compoundInhibitsPurifedTarget\"\n                options={selectItemsYN}\n                value={formValue.compoundInhibitsPurifedTarget}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"supportingInformation\" className=\"p-col-12 p-md-2\">\n              Supporting information\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"supportingInformation\"\n                options={selectItemsYN}\n                value={formValue.supportingInformation}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"modifedOn\" className=\"p-col-12 p-md-2\">\n              Modifed on\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"modifedOn\"\n                options={selectItemsYN}\n                value={formValue.modifedOn}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"modifedBy\" className=\"p-col-12 p-md-2\">\n              Modifed by\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"modifedBy\"\n                options={selectItemsYN}\n                value={formValue.modifedBy}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid p-jc-end\">\n            <div className=\"p-col-12 p-md-2\">\n              <SplitButton\n                label=\"Next\"\n                icon=\"pi pi-arrow-right\"\n                model={nextButtonItems}\n                className=\"p-button-success p-button-sm\"\n                onClick={() => {\n                  props.onFormSet(formValue);\n                }}\n              ></SplitButton>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default GenomePromoteFormChemicalInhibition;\n","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromoteFormImpactOfGeneticInhibit/GenomePromoteFormImpactOfGeneticInhibit.js",["129"],"import React, { useState } from \"react\";\nimport { SplitButton } from \"primereact/splitbutton\";\nimport { Dropdown } from \"primereact/dropdown\";\n\nconst GenomePromoteFormImpactOfGeneticInhibit = (props) => {\n  const [formValue, setFormValue] = useState({\n    nhp: \"\",\n    c3HeBFeJAcuteInfection: \"\",\n    c3HeFeJChronicInfection: \"\",\n    c57BL6OrBALBcAcuteInfection: \"\",\n    c57BL6OrBALBcChronicInfection: \"\",\n    macrophage: \"\",\n    standardMedia: \"\",\n    gluconeogenicCarbonSource: \"\",\n    otherSection2: \"\",\n    multipleStress: \"\",\n    lowPH: \"\",\n    caseum: \"\",\n    caseumSurrogate: \"\",\n    otherNR: \"\",\n  });\n\n  const setForm = (e) => {\n    var newFormValue = { ...formValue };\n    newFormValue[e.target.name] = e.target.value;\n    setFormValue(newFormValue);\n    console.log(e);\n  };\n\n  const nextButtonItems = [\n    {\n      label: \"Save form data in browser\",\n      icon: \"pi pi-cloud-download\",\n      command: () => {\n        console.log(\"Save form data local\");\n      },\n    },\n    {\n      label: \"Reset\",\n      icon: \"pi pi-refresh\",\n      command: () => {\n        console.log(\"Reset Section\");\n      },\n    },\n  ];\n\n  const selectItemsYN = [\n    { label: \"Yes\", value: \"yes\" },\n    { label: \"No\", value: \"no\" },\n    { label: \"Unknown\", value: \"un\" },\n  ];\n\n  const selectItemsAI = [\n    { label: \"Active\", value: \"active\" },\n    { label: \"Inactive\", value: \"inactive\" },\n    { label: \"Unknown\", value: \"un\" },\n  ];\n\n  return (\n    <React.Fragment>\n      <div className=\"card\">\n        <h5>a) During infections</h5>\n        <div className=\"p-fluid\">\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"nhp\" className=\"p-col-12 p-md-2\">\n              NHP\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"nhp\"\n                options={selectItemsAI}\n                value={formValue.nhp}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"c3HeBFeJAcuteInfection\" className=\"p-col-12 p-md-2\">\n              C3HeB/FeJ-Acute infection :\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"c3HeBFeJAcuteInfection\"\n                options={selectItemsAI}\n                value={formValue.c3HeBFeJAcuteInfection}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"c3HeFeJChronicInfection\"\n              className=\"p-col-12 p-md-2\"\n            >\n              C3He/FeJ-Chronic infection\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"c3HeFeJChronicInfection\"\n                options={selectItemsAI}\n                value={formValue.c3HeFeJChronicInfection}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"c57BL6OrBALBcAcuteInfection\"\n              className=\"p-col-12 p-md-2\"\n            >\n              C57BL/6 or BALB/c-Acute infection\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"c57BL6OrBALBcAcuteInfection\"\n                options={selectItemsAI}\n                value={formValue.c57BL6OrBALBcAcuteInfection}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"c57BL6OrBALBcChronicInfection\"\n              className=\"p-col-12 p-md-2\"\n            >\n              C57BL/6 or BALB/c-Chronic infection\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"c57BL6OrBALBcChronicInfection\"\n                options={selectItemsAI}\n                value={formValue.c57BL6OrBALBcChronicInfection}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"macrophage\" className=\"p-col-12 p-md-2\">\n              Macrophage\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"macrophage\"\n                options={selectItemsAI}\n                value={formValue.macrophage}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <br />\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <h5>b) on replication Mtb in vitro</h5>\n        <div className=\"p-fluid\">\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"standardMedia\" className=\"p-col-12 p-md-2\">\n              Standard media\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"standardMedia\"\n                options={selectItemsAI}\n                value={formValue.standardMedia}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"gluconeogenicCarbonSource\"\n              className=\"p-col-12 p-md-2\"\n            >\n              Gluconeogenic carbon source\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"gluconeogenicCarbonSource\"\n                options={selectItemsAI}\n                value={formValue.gluconeogenicCarbonSource}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"otherSection2\" className=\"p-col-12 p-md-2\">\n              Other\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"otherSection2\"\n                options={selectItemsAI}\n                value={formValue.otherSection2}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <br />\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <h5>c) on nonreplicating Mtb in vitro</h5>\n        <div className=\"p-fluid\">\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"multipleStress\" className=\"p-col-12 p-md-2\">\n              Multiple stress\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"multipleStress\"\n                options={selectItemsAI}\n                value={formValue.multipleStress}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"lowPH\" className=\"p-col-12 p-md-2\">\n              Low pH\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"lowPH\"\n                options={selectItemsAI}\n                value={formValue.lowPH}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"caseum\" className=\"p-col-12 p-md-2\">\n              Caseum\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"caseum\"\n                options={selectItemsAI}\n                value={formValue.caseum}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"caseumSurrogate\" className=\"p-col-12 p-md-2\">\n              Caseum surrogate\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"caseumSurrogate\"\n                options={selectItemsAI}\n                value={formValue.caseumSurrogate}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"otherNR\" className=\"p-col-12 p-md-2\">\n              Other NR\n            </label>\n            <div className=\"p-col-12 p-md-10\">\n              <Dropdown\n                name=\"otherNR\"\n                options={selectItemsAI}\n                value={formValue.otherNR}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid p-jc-end\">\n            <div className=\"p-col-12 p-md-2\">\n              <SplitButton\n                label=\"Next\"\n                icon=\"pi pi-arrow-right\"\n                model={nextButtonItems}\n                className=\"p-button-success p-button-sm\"\n                onClick={() => {\n                  props.onFormSet(formValue);\n                }}\n              ></SplitButton>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default GenomePromoteFormImpactOfGeneticInhibit;\n","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromoteFormLiabilities/GenomePromoteFormLiabilities.js",["130"],"import React, { useState } from \"react\";\nimport { SplitButton } from \"primereact/splitbutton\";\nimport { Dropdown } from \"primereact/dropdown\";\n\nconst GenomePromoteFormLiabilities = (props) => {\n  const [formValue, setFormValue] = useState({\n    targetInhibitionActivation: \"\",\n    concentrationOfSupplement: \"\",\n    functionallyRedundantGenes: \"\",\n    withLowCellularToxicity: \"\",\n  });\n\n  const setForm = (e) => {\n    var newFormValue = { ...formValue };\n    newFormValue[e.target.name] = e.target.value;\n    setFormValue(newFormValue);\n    console.log(e);\n  };\n\n  const nextButtonItems = [\n    {\n      label: \"Save form data in browser\",\n      icon: \"pi pi-cloud-download\",\n      command: () => {\n        console.log(\"Save form data local\");\n      },\n    },\n    {\n      label: \"Reset\",\n      icon: \"pi pi-refresh\",\n      command: () => {\n        console.log(\"Reset Section\");\n      },\n    },\n  ];\n\n  const selectItemsYN = [\n    { label: \"Yes\", value: \"yes\" },\n    { label: \"No\", value: \"no\" },\n    { label: \"Unknown\", value: \"un\" },\n  ];\n\n  const selectItemsAI = [\n    { label: \"Active\", value: \"active\" },\n    { label: \"Inactive\", value: \"inactive\" },\n    { label: \"Unknown\", value: \"un\" },\n  ];\n\n  return (\n    <React.Fragment>\n      <div className=\"card\">\n        <h5>a) Metabolic liabilities</h5>\n        <div className=\"p-fluid\">\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"targetInhibitionActivation\"\n              className=\"p-col-12 p-md-6\"\n            >\n              Target inhibition/activation can be neutralized by a suppliment\n              (eg: a metabolite) or in specifc media?\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"targetInhibitionActivation\"\n                options={selectItemsYN}\n                value={formValue.targetInhibitionActivation}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"concentrationOfSupplement\"\n              className=\"p-col-12 p-md-6\"\n            >\n              Concentration of supplement in human tissue is too low to\n              neutralize inactivation?\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"concentrationOfSupplement\"\n                options={selectItemsYN}\n                value={formValue.concentrationOfSupplement}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <br />\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <h5>b) Genetic</h5>\n        <div className=\"p-fluid\">\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"functionallyRedundantGenes\"\n              className=\"p-col-12 p-md-6\"\n            >\n              Does the Mtb genome contain functionally redundant genes?\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"functionallyRedundantGenes\"\n                options={selectItemsYN}\n                value={formValue.functionallyRedundantGenes}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <br />\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <h5>c) Other</h5>\n        <div className=\"p-fluid\">\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"withLowCellularToxicity\"\n              className=\"p-col-12 p-md-6\"\n            >\n              Have inhibitors with low cellular toxicity been isolated or does\n              the protein contain an active or allosteric site that is diferent\n              from the human counterpart?\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"withLowCellularToxicity\"\n                options={selectItemsYN}\n                value={formValue.withLowCellularToxicity}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid p-jc-end\">\n            <div className=\"p-col-12 p-md-2\">\n              <SplitButton\n                label=\"Next\"\n                icon=\"pi pi-arrow-right\"\n                model={nextButtonItems}\n                className=\"p-button-success p-button-sm\"\n                onClick={() => {\n                  props.onFormSet(formValue);\n                }}\n              ></SplitButton>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default GenomePromoteFormLiabilities;\n","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromoteFormTractability/GenomePromoteFormTractability.js",["131"],"import React, { useState } from \"react\";\nimport { SplitButton } from \"primereact/splitbutton\";\nimport { Dropdown } from \"primereact/dropdown\";\n\nconst GenomePromoteFormTractability = (props) => {\n  const [formValue, setFormValue] = useState({\n    activatorsIdentified: \"\",\n    druggableClass: \"\",\n    noWholeCellActivity: \"\",\n    c3HeFeJChronicInfection: \"\",\n    humanSimilarCounterpart: \"\",\n    largeScaleWholesaleActivity: \"\",\n    structureOfMtbProtein: \"\",\n    structureOfHomolog: \"\",\n    mtbStrains: \"\",\n    nonMtbStrains: \"\",\n    assayForMtbProteins: \"\",\n    assayForMtbProteinsFromAnotherSpecies: \"\",\n  });\n\n  const setForm = (e) => {\n    var newFormValue = { ...formValue };\n    newFormValue[e.target.name] = e.target.value;\n    setFormValue(newFormValue);\n    console.log(e);\n  };\n\n  const nextButtonItems = [\n    {\n      label: \"Save form data in browser\",\n      icon: \"pi pi-cloud-download\",\n      command: () => {\n        console.log(\"Save form data local\");\n      },\n    },\n    {\n      label: \"Reset\",\n      icon: \"pi pi-refresh\",\n      command: () => {\n        console.log(\"Reset Section\");\n      },\n    },\n  ];\n\n  const selectItemsYN = [\n    { label: \"Yes\", value: \"yes\" },\n    { label: \"No\", value: \"no\" },\n    { label: \"Unknown\", value: \"un\" },\n  ];\n\n  const selectItemsAI = [\n    { label: \"Active\", value: \"active\" },\n    { label: \"Inactive\", value: \"inactive\" },\n    { label: \"Unknown\", value: \"un\" },\n  ];\n\n  return (\n    <React.Fragment>\n      <div className=\"card\">\n        <h5>a) Druggability</h5>\n        <div className=\"p-fluid\">\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"activatorsIdentified\" className=\"p-col-12 p-md-6\">\n              Have inhibitors/activators of the Mtb protein with on-target whole\n              cell activity been identifed?\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"activatorsIdentified\"\n                options={selectItemsAI}\n                value={formValue.activatorsIdentified}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"druggableClass\" className=\"p-col-12 p-md-6\">\n              Does the target belong to a druggable class of proteins?\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"druggableClass\"\n                options={selectItemsAI}\n                value={formValue.druggableClass}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"noWholeCellActivity\" className=\"p-col-12 p-md-6\">\n              Small-scale screens identifed inhibitors/activators of the Mtb\n              protein but none have whole-cell activity\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"noWholeCellActivity\"\n                options={selectItemsAI}\n                value={formValue.noWholeCellActivity}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"c3HeFeJChronicInfection\"\n              className=\"p-col-12 p-md-6\"\n            >\n              C3He/FeJ-Chronic infection\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"c3HeFeJChronicInfection\"\n                options={selectItemsAI}\n                value={formValue.c3HeFeJChronicInfection}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"humanSimilarCounterpart\"\n              className=\"p-col-12 p-md-6\"\n            >\n              Does the human genome encode a structurally similar counterpart?\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"humanSimilarCounterpart\"\n                options={selectItemsAI}\n                value={formValue.humanSimilarCounterpart}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"largeScaleWholesaleActivity\"\n              className=\"p-col-12 p-md-6\"\n            >\n              Large-scale screens for the MTb enzyme have already been performed\n              and did not result in compounds with whole-cell activity.\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"largeScaleWholesaleActivity\"\n                options={selectItemsAI}\n                value={formValue.largeScaleWholesaleActivity}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <br />\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <h5>b) Protein Structure</h5>\n        <div className=\"p-fluid\">\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"structureOfMtbProtein\" className=\"p-col-12 p-md-6\">\n              Structure of Mtb protein is available\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"structureOfMtbProtein\"\n                options={selectItemsAI}\n                value={formValue.structureOfMtbProtein}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"structureOfHomolog\" className=\"p-col-12 p-md-6\">\n              Structure of homolog is available\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"structureOfHomolog\"\n                options={selectItemsAI}\n                value={formValue.structureOfHomolog}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <br />\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <h5>c) Whole-cell assays</h5>\n        <div className=\"p-fluid\">\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"mtbStrains\" className=\"p-col-12 p-md-6\">\n              Mtb strain(s) that can confrm on target activity are available;\n              strains can be (1) hypomorphs, (2) overexpressors, and/or (3)\n              resistant mutants\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"mtbStrains\"\n                options={selectItemsAI}\n                value={formValue.mtbStrains}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"nonMtbStrains\" className=\"p-col-12 p-md-6\">\n              Non-Mtb strain, which could be used to characterize compounds with\n              broad spectrum activity are available.\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"nonMtbStrains\"\n                options={selectItemsAI}\n                value={formValue.nonMtbStrains}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <br />\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <h5>d) Biochemical assays</h5>\n        <div className=\"p-fluid\">\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"assayForMtbProteins\" className=\"p-col-12 p-md-6\">\n              Assay for Mtb protein has been established\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"assayForMtbProteins\"\n                options={selectItemsAI}\n                value={formValue.assayForMtbProteins}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"assayForMtbProteinsFromAnotherSpecies\"\n              className=\"p-col-12 p-md-6\"\n            >\n              Assay has been established for homolog from another species\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"assayForMtbProteinsFromAnotherSpecies\"\n                options={selectItemsAI}\n                value={formValue.assayForMtbProteinsFromAnotherSpecies}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid p-jc-end\">\n            <div className=\"p-col-12 p-md-2\">\n              <SplitButton\n                label=\"Next\"\n                icon=\"pi pi-arrow-right\"\n                model={nextButtonItems}\n                className=\"p-button-success p-button-sm \"\n                onClick={() => {props.onFormSet(formValue)}}\n              ></SplitButton>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default GenomePromoteFormTractability;\n","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromoteFormInteractions/GenomePromoteFormInteractions.js",["132"],"import React, { useState } from \"react\";\nimport { SplitButton } from \"primereact/splitbutton\";\nimport { Dropdown } from \"primereact/dropdown\";\n\nconst GenomePromoteFormInteractions = (props) => {\n  const [formValue, setFormValue] = useState({\n    cIGrowthActivationOfTheTargetSynergize: \"\",\n    cIGrowthActivationOfTheTargetAntagonize: \"\",\n    cIInfectionActivationOfTheTargetSynergize: \"\",\n    cIInfectionActivationOfTheTargetAntagonize: \"\",\n    gIInfectionActivationOfTheTargetSynergize: \"\",\n    gIInfectionActivationOfTheTargetAntagonize: \"\",\n    gIGrowthActivationOfTheTargetSynergize: \"\",\n    gIGrowthActivationOfTheTargetAntagonize: \"\",\n  });\n\n  const setForm = (e) => {\n    var newFormValue = { ...formValue };\n    newFormValue[e.target.name] = e.target.value;\n    setFormValue(newFormValue);\n    console.log(e);\n  };\n\n  const nextButtonItems = [\n    {\n      label: \"Save form data in browser\",\n      icon: \"pi pi-cloud-download\",\n      command: () => {\n        console.log(\"Save form data local\");\n      },\n    },\n    {\n      label: \"Reset\",\n      icon: \"pi pi-refresh\",\n      command: () => {\n        console.log(\"Reset Section\");\n      },\n    },\n  ];\n\n  const selectItemsYN = [\n    { label: \"Yes\", value: \"yes\" },\n    { label: \"No\", value: \"no\" },\n    { label: \"Unknown\", value: \"un\" },\n  ];\n\n  const selectItemsAI = [\n    { label: \"Active\", value: \"active\" },\n    { label: \"Inactive\", value: \"inactive\" },\n    { label: \"Unknown\", value: \"un\" },\n  ];\n\n  return (\n    <React.Fragment>\n      <div className=\"card\">\n        <h5>a) Chemical inhibition during growth in vitro</h5>\n        <div className=\"p-fluid\">\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"cIGrowthActivationOfTheTargetSynergize\" className=\"p-col-12 p-md-6\">\n              Does inhibition/activation of the target synergize with current TB\n              drugs or other drugs under development?\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"cIGrowthActivationOfTheTargetSynergize\"\n                options={selectItemsYN}\n                value={formValue.cIGrowthActivationOfTheTargetSynergize}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"cIGrowthActivationOfTheTargetAntagonize\" className=\"p-col-12 p-md-6\">\n              Does inhibition/activation of the target antagonize with current\n              TB drugs or other drugs under development?\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"cIGrowthActivationOfTheTargetAntagonize\"\n                options={selectItemsYN}\n                value={formValue.cIGrowthActivationOfTheTargetAntagonize}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <br />\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <h5>b) Chemical inhibition during infection</h5>\n        <div className=\"p-fluid\">\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"cIInfectionActivationOfTheTargetSynergize\" className=\"p-col-12 p-md-6\">\n              Does inhibition/activation of the targt synergize wtih current TB\n              drugs or other drugs under development?\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"cIInfectionActivationOfTheTargetSynergize\"\n                options={selectItemsYN}\n                value={formValue.cIInfectionActivationOfTheTargetSynergize}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"cIInfectionActivationOfTheTargetAntagonize\" className=\"p-col-12 p-md-6\">\n              Does inhibition/activation of the target antagonize with current\n              TB drugs or other drugs under development?\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"cIInfectionActivationOfTheTargetAntagonize\"\n                options={selectItemsYN}\n                value={formValue.cIInfectionActivationOfTheTargetAntagonize}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <br />\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <h5>c) Genetic inhibition during infection</h5>\n        <div className=\"p-fluid\">\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"gIInfectionActivationOfTheTargetSynergize\" className=\"p-col-12 p-md-6\">\n              Does inhibition/activation of the targt synergize wtih current TB\n              drugs or other drugs under development?\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"gIInfectionActivationOfTheTargetSynergize\"\n                options={selectItemsYN}\n                value={formValue.gIInfectionActivationOfTheTargetSynergize}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"gIInfectionActivationOfTheTargetAntagonize\" className=\"p-col-12 p-md-6\">\n              Does inhibition/activation of the target antagonize with current\n              TB drugs or other drugs under development?\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"gIInfectionActivationOfTheTargetAntagonize\"\n                options={selectItemsYN}\n                value={formValue.gIInfectionActivationOfTheTargetAntagonize}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <br />\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <h5>d) Genetic inhibition during growth in vitro</h5>\n        <div className=\"p-fluid\">\n          <div className=\"p-field p-grid\">\n            <label htmlFor=\"gIGrowthActivationOfTheTargetSynergize\" className=\"p-col-12 p-md-6\">\n              Does inhibition/activation of the targt synergize wtih current TB\n              drugs or other drugs under development?\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"gIGrowthActivationOfTheTargetSynergize\"\n                options={selectItemsYN}\n                value={formValue.gIGrowthActivationOfTheTargetSynergize}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid\">\n            <label\n              htmlFor=\"gIGrowthActivationOfTheTargetAntagonize\"\n              className=\"p-col-12 p-md-6\"\n            >\n              Does inhibition/activation of the target antagonize with current\n              TB drugs or other drugs under development?\n            </label>\n            <div className=\"p-col-12 p-md-6\">\n              <Dropdown\n                name=\"gIGrowthActivationOfTheTargetAntagonize\"\n                options={selectItemsYN}\n                value={formValue.gIGrowthActivationOfTheTargetAntagonize}\n                optionLabel=\"label\"\n                onChange={(e) => setForm(e)}\n                placeholder=\"Select a value\"\n              />\n            </div>\n          </div>\n\n          <div className=\"p-field p-grid p-jc-end\">\n            <div className=\"p-col-12 p-md-2\">\n              <SplitButton\n                label=\"Finish\"\n                icon=\"pi pi-arrow-right\"\n                model={nextButtonItems}\n                className=\"p-button-success p-button-sm \"\n                onClick={() => {props.onFormSet(formValue)}}\n              ></SplitButton>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default GenomePromoteFormInteractions;\n","/Users/sidx/workspace/react/tpt-app/src/scenes/Genome/GenomePromote/GenomePromoteBucketScore/GenomePromoteBucketScore.js",[],"/Users/sidx/workspace/react/tpt-app/src/app/layout/Loading/Loading.js",[],"/Users/sidx/workspace/react/tpt-app/src/app/stores/genomeStore.js",[],"/Users/sidx/workspace/react/tpt-app/src/app/api/agent.js",[],"/Users/sidx/workspace/react/tpt-app/src/scenes/Home/Home.js",["133"],"import React from \"react\";\nimport { Card } from \"primereact/card\";\nimport { Button } from \"primereact/button\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  //const header = <img alt=\"Card\" src=\"/images/usercard.png\" />;\n  const header = null;\n\n  return (\n    <div className=\"Home\">\n      <h1>Target and Project Tracker (TPT) </h1>\n      <div className=\"subtext\">\n        <p>\n          The Target and Project Tracker (TPT) is a tool for visualizing and\n          managing targets, pre-projects and projects within the TBDA and its\n          discovery portfolio. This is intended to be used by Program and\n          Portfolio Managers, Project Managers, and Scientists\n        </p>\n      </div>\n\n      <div className=\"p-d-flex p-flex-column\">\n        <div className=\"p-mb-2\">\n          <div className=\"p-d-flex p-jc-center\">\n            <div className=\"p-mr-2\">\n              <Card\n                title=\"Genomes\"\n                subTitle=\"(4194)\"\n                style={{ width: \"14em\" }}\n                header={header}\n              >\n                <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}>\n                  Shows a list of candidate genes.\n                  <a href=\"/genomes\">\n                    <i className=\"pi pi-arrow-right\"></i>\n                  </a>\n                </p>\n              </Card>\n            </div>\n            <div className=\"p-mr-2\">\n              {\" \"}\n              <Card\n                title=\"Targets\"\n                subTitle=\"(65)\"\n                style={{ width: \"14em\" }}\n                header={header}\n              >\n                <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}>\n                  Shows a list of Targets.\n                  <a href=\"/targets\">\n                    <i className=\"pi pi-arrow-right\"></i>\n                  </a>\n                </p>\n              </Card>\n            </div>\n            <div className=\"p-mr-2\">\n              {\" \"}\n              <Card\n                title=\"Screen\"\n                subTitle=\"(30)\"\n                style={{ width: \"14em\" }}\n                header={header}\n              >\n                <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}>\n                  Shows a list of Targets.\n                  <a href=\"/targets\">\n                    <i className=\"pi pi-arrow-right\"></i>\n                  </a>\n                </p>\n              </Card>\n            </div>\n          </div>\n        </div>\n        <div className=\"p-mb-2\">\n          <div className=\"p-d-flex p-jc-center\">\n            <div className=\"p-mr-2\">\n              <Card\n                title=\"FHA\"\n                subTitle=\"(10)\"\n                style={{ width: \"14em\" }}\n                header={header}\n              >\n                <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}>\n                  Shows a list of Targets.\n                  <a href=\"/genomes\">\n                    <i className=\"pi pi-arrow-right\"></i>\n                  </a>\n                </p>\n              </Card>\n            </div>\n            <div className=\"p-mr-2\">\n              {\" \"}\n              <Card\n                title=\"H2L\"\n                subTitle=\"(10)\"\n                style={{ width: \"14em\" }}\n                header={header}\n              >\n                <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}>\n                  Shows a list of Targets.\n                  <a href=\"/targets\">\n                    <i className=\"pi pi-arrow-right\"></i>\n                  </a>\n                </p>\n              </Card>\n            </div>\n            <div className=\"p-mr-2\">\n              {\" \"}\n              <Card\n                title=\"LO\"\n                subTitle=\"(8)\"\n                style={{ width: \"14em\" }}\n                header={header}\n              >\n                <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}>\n                  Shows a list of Targets.\n                  <a href=\"/targets\">\n                    <i className=\"pi pi-arrow-right\"></i>\n                  </a>\n                </p>\n              </Card>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div className=\"p-d-flex p-jc-center\">\n            <div className=\"p-mr-2\">\n              <Card\n                title=\"SP\"\n                subTitle=\"(4)\"\n                style={{ width: \"14em\" }}\n                header={header}\n              >\n                <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}>\n                  Shows a list of Targets.\n                  <a href=\"/genomes\">\n                    <i className=\"pi pi-arrow-right\"></i>\n                  </a>\n                </p>\n              </Card>\n            </div>\n            <div className=\"p-mr-2\">\n              {\" \"}\n              <Card\n                title=\"IND\"\n                subTitle=\"(4)\"\n                style={{ width: \"14em\" }}\n                header={header}\n              >\n                <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}>\n                  Shows a list of Targets.\n                  <a href=\"/targets\">\n                    <i className=\"pi pi-arrow-right\"></i>\n                  </a>\n                </p>\n              </Card>\n            </div>\n            <div className=\"p-mr-2\">\n              {\" \"}\n              <Card\n                title=\"Clinical\"\n                subTitle=\"(2)\"\n                style={{ width: \"14em\" }}\n                header={header}\n              >\n                <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}>\n                  Shows a list of Targets.\n                  <a href=\"/targets\">\n                    <i className=\"pi pi-arrow-right\"></i>\n                  </a>\n                </p>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/sidx/workspace/react/tpt-app/src/scenes/Landing/Landing.js",[],"/Users/sidx/workspace/react/tpt-app/src/app/layout/NotFound/NotFound.js",[],"/Users/sidx/workspace/react/tpt-app/src/history.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":14},{"ruleId":"138","severity":1,"message":"142","line":2,"column":16,"nodeType":"140","messageId":"141","endLine":2,"endColumn":23},{"ruleId":"138","severity":1,"message":"143","line":10,"column":22,"nodeType":"140","messageId":"141","endLine":10,"endColumn":35},{"ruleId":"138","severity":1,"message":"144","line":48,"column":9,"nodeType":"140","messageId":"141","endLine":48,"endColumn":22},{"ruleId":"138","severity":1,"message":"145","line":47,"column":9,"nodeType":"140","messageId":"141","endLine":47,"endColumn":22},{"ruleId":"138","severity":1,"message":"144","line":43,"column":9,"nodeType":"140","messageId":"141","endLine":43,"endColumn":22},{"ruleId":"138","severity":1,"message":"145","line":45,"column":9,"nodeType":"140","messageId":"141","endLine":45,"endColumn":22},{"ruleId":"138","severity":1,"message":"144","line":47,"column":9,"nodeType":"140","messageId":"141","endLine":47,"endColumn":22},{"ruleId":"138","severity":1,"message":"146","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":16},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'setGenomeData' is assigned a value but never used.","'selectItemsAI' is assigned a value but never used.","'selectItemsYN' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]